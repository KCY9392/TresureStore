<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="sellMapper">


<!-- type은 mybatis-config에서 sell 라는 별칭을 정해두었음 -->
<resultMap type="sell" id="sellResultSet" >

	<id column="SELL_NO" property="sellNo"></id>
	<result column="USER_NO" property="userNo"></result>
	<result column="CATEGORY_NO" property="categoryNo"></result>
	<result column="SELL_TITLE" property="sellTitle"></result>
	<result column="SELL_CONTENT" property="sellContent"></result>
	<result column="IMAGE_SRC" property="imgSrc"></result>
	<result column="ORIGIN_NAME" property="originName"></result>
	<result column="CHANGE_NAME" property="changeName"></result>
	<result column="COUNT" property="count"></result>
	<result column="PRICE" property="price"></result>
	<result column="SELL_STATUS" property="sellStatus"></result>
	<result column="CREATE_DATE" property="createDate"></result>
	<result column="UPDATE_DATE" property="updateDate"></result>
	<result column="STATUS" property="status"></result>
	<result column="HEART_NUM" property="heartNum"></result>
	
	
	<result column="CHATROOM_NO" property="chatRoomNo"></result>
	<result column="CATEGORY_NAME" property="categoryName"></result>
	<result column="AVG" property="avg"></result>
	<result column="NEGO_PRICE" property="negoPrice"></result>
	<result column="NEGO_STATUS" property="negoStatus"></result>

	<result column="REPORT_NUM" property="report_Num"></result>
	<result column="FOLLOWER_NUM" property="follower_Num"></result>
	<result column="SELL_NUM" property="sell_Num"></result>
	<result column="FOLLOW_IS" property="follow_Is"></result>
	
	
	<collection property="imgList" resultMap="sellImgResultSet"/>

</resultMap>

<resultMap type="sellImg" id="sellImgResultSet">
	<id column="SFILE_No" property="sfileNo"></id>
	<result column="SELL_NO"></result>
	<result column="ORIGIN_NAME" property="originName"/>
	<result column="CHANGE_NAME" property="changeName"/>
	<result column="FILE_TYPE" property="fileType"/>
	<result column="STATUS" property="status"/>
	<result column="UPLOAD_DATE" property="upLoadDate"/>
	<result column="FILE_PATH" property="filePath"/>
</resultMap>


	<select id="sellListselect" resultMap="sellResultSet">
		SELECT 
	    	SELL_NO, CATEGORY_NO, SELL_TITLE, IMAGE_SRC, PRICE, HEART_NUM
		FROM SELL S 
        LEFT JOIN MEMBER M ON(S.USER_NO=M.USER_NO)
		WHERE S.STATUS = 'Y' 
		AND SELL_STATUS = 'I' 
		AND M.STATUS = 'Y' 
		AND ROWNUM <![CDATA[ <= ]]> 40
	</select>

	<!-- 상품등록 -->
	<insert id="insertSell" parameterType="sell" >
		INSERT INTO SELL(
			SELL_NO,
			USER_NO,
			IMAGE_SRC,
			CATEGORY_NO,
			SELL_TITLE,
			SELL_CONTENT,
			PRICE
		) VALUES (
			#{sellNo}
		  , 10
		  , #{imgSrc}
		  , #{categoryNo}
		  , #{sellTitle}
		  , #{sellContent}
		  , #{price}
		)
	</insert>
	<insert id="insertSellImgList" parameterType="list">
		INSERT INTO SFILE
		SELECT SEQ_SFNO.NEXTVAL AS SFILE_NO, C.* FROM
		(
			<foreach collection="list" item="img" separator="UNION ALL">
				SELECT #{img.sellNo} as SELL_NO,
					   #{img.originName} as ORIGIN_NAME,
					   #{img.changeName} as CHANGE_NAME,
					   #{img.upLoadDate} as UPLOAD_DATE,
					   #{img.filePath} as FILE_PATH,
					   #{img.fileType} as FILE_TYPE,
					   #{img.status} as STATUS
				FROM DUAL
			</foreach>
		) C
	</insert>
	
	<select id="getSellNo" parameterType="string" resultType="integer">
		SELECT SEQ_SNO.NEXTVAL FROM DUAL
	</select>
	
	<select id="selectSellImgList" parameterType="hashmap" resultType="sellImg">
		SELECT F.SFILE_NO
		     , F.SELL_NO
		     , F.ORIGIN_NAME
		     , F.CHANGE_NAME
		     , F.UPLOAD_DATE
		     , F.FILE_PATH
		     , F.FILE_TYPE
		     , F.STATUS
		  FROM SELL S
		     , SFILE F
		 WHERE S.SELL_NO = F.SELL_NO
		   AND F.FILE_TYPE = 'D'
		   AND S.SELL_NO = #{sellNo}
		ORDER BY F.SFILE_NO DESC
	</select>
	
	<!-- 채팅방에 보이는 판매제품정보 --> 
	<select id="selectSellProduct" parameterType="int" resultMap="sellResultSet">
	   SELECT CR.CHATROOM_NO,
	          S.SELL_NO AS "SELL_NO",
	          S.USER_NO AS "USER_NO",
	          CATEGORY_NAME,
	          SELL_TITLE,
	          SELL_CONTENT,
	          IMAGE_SRC,
	          S.COUNT,
	          PRICE,
	          S.CREATE_DATE AS "CREATE_DATE",
	          HEART_NUM,
	          AVG,
              NEGO_PRICE,
              NEGO_STATUS
	   FROM CHAT_ROOM CR
	   JOIN SELL S ON (S.SELL_NO = CR.SELL_NO)
       JOIN CATEGORY C ON (S.CATEGORY_NO = C.CATEGORY_NO)
       LEFT JOIN NEGO N ON (CR.CHATROOM_NO = N.CHATROOM_NO)
	   JOIN MEMBER M ON (S.USER_NO = M.USER_NO)
	   JOIN (SELECT AVG(REV_SCORE) AS "AVG",
	          		S.USER_NO
	   		 FROM REVIEW R
	   		 JOIN SELL S ON(R.SELL_NO = S.SELL_NO)
	   		 GROUP BY S.USER_NO) 
	   		 PP ON (PP.USER_NO = S.USER_NO)
	   WHERE CR.CHATROOM_NO = ${chatRoomNo} AND S.STATUS = 'Y' AND M.STATUS = 'Y'
	</select>
	
	
	
	<!-- 마이페이지 판매목록 -->
	<select id="mypageSellList" resultMap="sellResultSet" parameterType="Integer">
	
	SELECT 
             SELL_NO, CATEGORY_NO, SELL_TITLE, IMAGE_SRC, PRICE, HEART_NUM
            FROM SELL 
            JOIN MEMBER USING(USER_NO)
            WHERE USER_NO=#{userNo}
		
	</select>
	
	
	
	<!-- 상품 상세조회 -->
	<select id="selectSellDetail" parameterType="map" resultMap="sellResultSet">
       SELECT SELL_TITLE,
       CG.CATEGORY_NAME AS "CATEGORY_NAME",
       PRICE,
       HEART_NUM,
       COUNT,
       CREATE_DATE,
       SELL_CONTENT,
       IMAGE_SRC,
       S.USER_NO AS "USER_NO",
       (SELECT COUNT(*) FROM REPORT R JOIN SELL S ON (R.REPORTED_NO=S.USER_NO)) AS "REPORT_NUM",
       (SELECT COUNT(*) FROM FOLLOW F WHERE F.FW_ID=S.USER_NO ) AS "FOLLOWER_NUM",
       (SELECT COUNT(*) FROM SELL S2 WHERE S2.USER_NO = S.USER_NO AND S2.SELL_STATUS = 'I') AS "SELL_NUM",
       <if test="#{userNo} != null">
       (SELECT COUNT(*) FROM FOLLOW F WHERE F.FW_ID = S.USER_NO AND F.FI_ID = #{userNo}) AS "FOLLOW_IS",  
        </if>
        AVG
       FROM SELL S
       LEFT JOIN (SELECT AVG(REV_SCORE) AS "AVG", S.USER_NO FROM REVIEW RE JOIN SELL S ON (RE.SELL_NO=S.SELL_NO)
             GROUP BY S.USER_NO) A ON (A.USER_NO=S.USER_NO)
       LEFT JOIN CATEGORY CG USING(CATEGORY_NO)
       WHERE SELL_NO = #{sellNo}
	</select>
	
	
	
	<!-- 상품 상세조회 조회수 증가 -->
	<update id="increaseCount" parameterType="int">
      UPDATE SELL
      SET COUNT = COUNT +1
      WHERE SELL_NO = #{sellNo}
    </update>
   
   
    <!-- 채팅 네고 -->
    <insert id="insertNegoPrice" parameterType="Sell" >
    	INSERT INTO NEGO (SELL_NO, CHATROOM_NO, NEGO_PRICE, NEGO_STATUS)
    	VALUES (#{sellNo}, #{chatRoomNo}, #{negoPrice}, 'Y')
    </insert>
   
	<!-- 카테고리별 상품목록 조회 및 최신순, 인기순, 저가순, 고가순 정렬 -->
	<select id="howOrderList" parameterType="map" resultMap="sellResultSet">
		<if test="categoryCode == 1">
    		SELECT 
		    	SELL_NO, S.CATEGORY_NO, SELL_TITLE, IMAGE_SRC, PRICE, HEART_NUM, CATEGORY_NAME, CG.CATEGORY_NAME AS "CATEGORY_NAME"
			FROM SELL S 
	        LEFT JOIN MEMBER M ON(S.USER_NO=M.USER_NO)
	        LEFT JOIN CATEGORY CG ON(S.CATEGORY_NO=CG.CATEGORY_NO)
			WHERE S.STATUS = 'Y' 
			AND SELL_STATUS = 'I' 
			AND M.STATUS = 'Y' 
			AND ROWNUM <![CDATA[ <= ]]> 80
    	</if>
    	<if test="categoryCode != 1">
	    	SELECT 
		    	SELL_NO, S.CATEGORY_NO, SELL_TITLE, IMAGE_SRC, PRICE, HEART_NUM, CG.CATEGORY_NAME AS "CATEGORY_NAME"
			FROM SELL S 
	        LEFT JOIN MEMBER M ON(S.USER_NO=M.USER_NO)
	        LEFT JOIN CATEGORY CG ON(S.CATEGORY_NO=CG.CATEGORY_NO)
			WHERE S.STATUS = 'Y' AND SELL_STATUS = 'I' AND M.STATUS = 'Y'
	        AND S.CATEGORY_NO = #{categoryCode}
        </if>
        <if test="howOrder != null">
			ORDER BY
	        <if test='howOrder.equals("recent")'>
	        	S.CREATE_DATE DESC
	        </if>
	        <if test='howOrder.equals("popular")'>
	        	S.HEART_NUM DESC, S.COUNT DESC
	        </if>
	        <if test='howOrder.equals("lowest")'>
	        	S.PRICE
	        </if>
	        <if test='howOrder.equals("high")'>
	        	S.PRICE DESC
	        </if>
	     </if>
	</select>
</mapper>